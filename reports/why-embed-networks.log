Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
from matplotlib.gridspec import GridSpec
import seaborn as sns
from graphbook_code import GraphColormap, draw_cartesian

# setup
cmap = GraphColormap("divergent", k=2).color
fig = plt.figure(figsize=(12, 8))
gs = GridSpec(1, 3)
axm = fig.add_subplot(gs[0])
axs = fig.add_subplot(gs[1:])

# plot left
hm = sns.heatmap(data, ax=axm, yticklabels=False, 
                 cmap=cmap, annot=True, cbar=True)
hm.hlines(range(len(data)), *hm.get_xlim(), colors='k', alpha=.1)

# plot right
draw_cartesian(ax=axs)
plot = sns.scatterplot(data=data, x='x', y='y', legend=False, ax=axs, color="k")

# lines
max_ = int(data.values.max()) + 1
plot.vlines(0, -max_, max_, colors="black", lw=.9, linestyle="dashed", alpha=.2)
plot.hlines(0, -max_, max_, colors="black", lw=.9, linestyle="dashed", alpha=.2)

# ticks
plot.xaxis.set_major_locator(plt.MaxNLocator(6))
plot.yaxis.set_major_locator(plt.MaxNLocator(6))

# set axis bounds
lim = (-max_, max_)
plot.set(xlim=lim, ylim=lim)

# title, etc
plt.figtext(0.5, 0, "Figure 2.1")
plt.suptitle("Euclidean data represented as a data matrix and represented in Euclidean space", fontsize=24)
plt.tight_layout()
plt.savefig("/Users/alex/Dropbox/thesis_pdf/figures/fig_2-1.png", dpi=300, transparent=False, bbox_inches='tight')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m/tmp/ipykernel_2502/894961369.py[0m in [0;36m<module>[0;34m[0m
[1;32m     37[0m [0mplt[0m[0;34m.[0m[0msuptitle[0m[0;34m([0m[0;34m"Euclidean data represented as a data matrix and represented in Euclidean space"[0m[0;34m,[0m [0mfontsize[0m[0;34m=[0m[0;36m24[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     38[0m [0mplt[0m[0;34m.[0m[0mtight_layout[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 39[0;31m [0mplt[0m[0;34m.[0m[0msavefig[0m[0;34m([0m[0;34m"/Users/alex/Dropbox/thesis_pdf/figures/fig_2-1.png"[0m[0;34m,[0m [0mdpi[0m[0;34m=[0m[0;36m300[0m[0;34m,[0m [0mtransparent[0m[0;34m=[0m[0;32mFalse[0m[0;34m,[0m [0mbbox_inches[0m[0;34m=[0m[0;34m'tight'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/pyplot.py[0m in [0;36msavefig[0;34m(*args, **kwargs)[0m
[1;32m    956[0m [0;32mdef[0m [0msavefig[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    957[0m     [0mfig[0m [0;34m=[0m [0mgcf[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 958[0;31m     [0mres[0m [0;34m=[0m [0mfig[0m[0;34m.[0m[0msavefig[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    959[0m     [0mfig[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mdraw_idle[0m[0;34m([0m[0;34m)[0m   [0;31m# need this if 'transparent=True' to reset colors[0m[0;34m[0m[0;34m[0m[0m
[1;32m    960[0m     [0;32mreturn[0m [0mres[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/figure.py[0m in [0;36msavefig[0;34m(self, fname, transparent, **kwargs)[0m
[1;32m   3010[0m                         ax.patch._cm_set(facecolor='none', edgecolor='none'))
[1;32m   3011[0m [0;34m[0m[0m
[0;32m-> 3012[0;31m             [0mself[0m[0;34m.[0m[0mcanvas[0m[0;34m.[0m[0mprint_figure[0m[0;34m([0m[0mfname[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3013[0m [0;34m[0m[0m
[1;32m   3014[0m     def ginput(self, n=1, timeout=30, show_clicks=True,

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/backend_bases.py[0m in [0;36mprint_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2312[0m                 [0;31m# force the figure dpi to 72), so we need to set it again here.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2313[0m                 [0;32mwith[0m [0mcbook[0m[0;34m.[0m[0m_setattr_cm[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mfigure[0m[0;34m,[0m [0mdpi[0m[0;34m=[0m[0mdpi[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2314[0;31m                     result = print_method(
[0m[1;32m   2315[0m                         [0mfilename[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2316[0m                         [0mfacecolor[0m[0;34m=[0m[0mfacecolor[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/backend_bases.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m   1641[0m             [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1642[0m [0;34m[0m[0m
[0;32m-> 1643[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1644[0m [0;34m[0m[0m
[1;32m   1645[0m     [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/_api/deprecation.py[0m in [0;36mwrapper[0;34m(*inner_args, **inner_kwargs)[0m
[1;32m    410[0m                          [0;32melse[0m [0mdeprecation_addendum[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    411[0m                 **kwargs)
[0;32m--> 412[0;31m         [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0minner_args[0m[0;34m,[0m [0;34m**[0m[0minner_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    413[0m [0;34m[0m[0m
[1;32m    414[0m     [0mDECORATORS[0m[0;34m[[0m[0mwrapper[0m[0;34m][0m [0;34m=[0m [0mdecorator[0m[0;34m[0m[0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py[0m in [0;36mprint_png[0;34m(self, filename_or_obj, metadata, pil_kwargs, *args)[0m
[1;32m    539[0m         """
[1;32m    540[0m         [0mFigureCanvasAgg[0m[0;34m.[0m[0mdraw[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 541[0;31m         mpl.image.imsave(
[0m[1;32m    542[0m             [0mfilename_or_obj[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mbuffer_rgba[0m[0;34m([0m[0;34m)[0m[0;34m,[0m [0mformat[0m[0;34m=[0m[0;34m"png"[0m[0;34m,[0m [0morigin[0m[0;34m=[0m[0;34m"upper"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    543[0m             dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/matplotlib/image.py[0m in [0;36mimsave[0;34m(fname, arr, vmin, vmax, cmap, format, origin, dpi, metadata, pil_kwargs)[0m
[1;32m   1673[0m         [0mpil_kwargs[0m[0;34m.[0m[0msetdefault[0m[0;34m([0m[0;34m"format"[0m[0;34m,[0m [0mformat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1674[0m         [0mpil_kwargs[0m[0;34m.[0m[0msetdefault[0m[0;34m([0m[0;34m"dpi"[0m[0;34m,[0m [0;34m([0m[0mdpi[0m[0;34m,[0m [0mdpi[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1675[0;31m         [0mimage[0m[0;34m.[0m[0msave[0m[0;34m([0m[0mfname[0m[0;34m,[0m [0;34m**[0m[0mpil_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1676[0m [0;34m[0m[0m
[1;32m   1677[0m [0;34m[0m[0m

[0;32m/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/PIL/Image.py[0m in [0;36msave[0;34m(self, fp, format, **params)[0m
[1;32m   2235[0m                 [0mfp[0m [0;34m=[0m [0mbuiltins[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"r+b"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2236[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2237[0;31m                 [0mfp[0m [0;34m=[0m [0mbuiltins[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"w+b"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2238[0m [0;34m[0m[0m
[1;32m   2239[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/Users/alex/Dropbox/thesis_pdf/figures/fig_2-1.png'
FileNotFoundError: [Errno 2] No such file or directory: '/Users/alex/Dropbox/thesis_pdf/figures/fig_2-1.png'

